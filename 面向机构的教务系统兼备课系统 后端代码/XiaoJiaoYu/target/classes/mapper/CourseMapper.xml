<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scnu.course.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.scnu.course.bean.Course" >
    <id column="course_Id" property="courseId" jdbcType="INTEGER" />
    <result column="user_Id" property="userId" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="INTEGER" />
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIME" />
    <result column="student" property="student" jdbcType="CHAR" />
    <result column="subject" property="subject" jdbcType="CHAR" />
    <result column="grade_Id" property="gradeId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="course_Time" property="courseTime" jdbcType="INTEGER" />
    <result column="resid_Course" property="residCourse" jdbcType="INTEGER" />
    <result column="course_Topic" property="courseTopic" jdbcType="CHAR" />
    <result column="is_Made_Plan" property="isMadePlan" jdbcType="INTEGER" />
    <result column="is_Corrected" property="isCorrected" jdbcType="INTEGER" />
    <result column="is_SentFeedback" property="isSentfeedback" jdbcType="INTEGER" />
    <result column="grade_Name" property="gradeName" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_Id, user_Id, year, month, date, startTime, endTime, student, subject, grade_Id, 
    status, course_Time, resid_Course, course_Topic, is_Made_Plan, is_Corrected, is_SentFeedback, grade_Name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scnu.course.bean.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_Id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where course_Id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scnu.course.bean.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scnu.course.bean.Course" >
    insert into course (course_Id, user_Id, year, 
      month, date, startTime, 
      endTime, student, subject, grade_Id, 
      status, course_Time, resid_Course, 
      course_Topic, is_Made_Plan, is_Corrected, 
      is_SentFeedback)
    values (#{courseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, 
      #{month,jdbcType=INTEGER}, #{date,jdbcType=INTEGER}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIME}, #{student,jdbcType=CHAR}, #{subject,jdbcType=CHAR}, #{gradeId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{courseTime,jdbcType=INTEGER}, #{residCourse,jdbcType=INTEGER}, 
      #{courseTopic,jdbcType=CHAR}, #{isMadePlan,jdbcType=INTEGER}, #{isCorrected,jdbcType=INTEGER}, 
      #{isSentfeedback,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.scnu.course.bean.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_Id,
      </if>
      <if test="userId != null" >
        user_Id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="student != null" >
        student,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="gradeId != null" >
        grade_Id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="courseTime != null" >
        course_Time,
      </if>
      <if test="residCourse != null" >
        resid_Course,
      </if>
      <if test="courseTopic != null" >
        course_Topic,
      </if>
      <if test="isMadePlan != null" >
        is_Made_Plan,
      </if>
      <if test="isCorrected != null" >
        is_Corrected,
      </if>
      <if test="isSentfeedback != null" >
        is_SentFeedback,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIME},
      </if>
      <if test="student != null" >
        #{student,jdbcType=CHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=CHAR},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null" >
        #{courseTime,jdbcType=INTEGER},
      </if>
      <if test="residCourse != null" >
        #{residCourse,jdbcType=INTEGER},
      </if>
      <if test="courseTopic != null" >
        #{courseTopic,jdbcType=CHAR},
      </if>
      <if test="isMadePlan != null" >
        #{isMadePlan,jdbcType=INTEGER},
      </if>
      <if test="isCorrected != null" >
        #{isCorrected,jdbcType=INTEGER},
      </if>
      <if test="isSentfeedback != null" >
        #{isSentfeedback,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scnu.course.bean.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseId != null" >
        course_Id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_Id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIME},
      </if>
      <if test="record.student != null" >
        student = #{record.student,jdbcType=CHAR},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=CHAR},
      </if>
      <if test="record.gradeId != null" >
        grade_Id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.courseTime != null" >
        course_Time = #{record.courseTime,jdbcType=INTEGER},
      </if>
      <if test="record.residCourse != null" >
        resid_Course = #{record.residCourse,jdbcType=INTEGER},
      </if>
      <if test="record.courseTopic != null" >
        course_Topic = #{record.courseTopic,jdbcType=CHAR},
      </if>
      <if test="record.isMadePlan != null" >
        is_Made_Plan = #{record.isMadePlan,jdbcType=INTEGER},
      </if>
      <if test="record.isCorrected != null" >
        is_Corrected = #{record.isCorrected,jdbcType=INTEGER},
      </if>
      <if test="record.isSentfeedback != null" >
        is_SentFeedback = #{record.isSentfeedback,jdbcType=INTEGER},
      </if>
      <if test="record.gradeName != null" >
        grade_Name = #{record.gradeName,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set course_Id = #{record.courseId,jdbcType=INTEGER},
      user_Id = #{record.userId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      date = #{record.date,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIME},
      student = #{record.student,jdbcType=CHAR},
      subject = #{record.subject,jdbcType=CHAR},
      grade_Id = #{record.gradeId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      course_Time = #{record.courseTime,jdbcType=INTEGER},
      resid_Course = #{record.residCourse,jdbcType=INTEGER},
      course_Topic = #{record.courseTopic,jdbcType=CHAR},
      is_Made_Plan = #{record.isMadePlan,jdbcType=INTEGER},
      is_Corrected = #{record.isCorrected,jdbcType=INTEGER},
      is_SentFeedback = #{record.isSentfeedback,jdbcType=INTEGER},
       grade_Name = #{record.gradeName,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scnu.course.bean.Course" >
    update course
    <set >
      <if test="userId != null" >
        user_Id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIME},
      </if>
      <if test="student != null" >
        student = #{student,jdbcType=CHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=CHAR},
      </if>
      <if test="gradeId != null" >
        grade_Id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null" >
        course_Time = #{courseTime,jdbcType=INTEGER},
      </if>
      <if test="residCourse != null" >
        resid_Course = #{residCourse,jdbcType=INTEGER},
      </if>
      <if test="courseTopic != null" >
        course_Topic = #{courseTopic,jdbcType=CHAR},
      </if>
      <if test="isMadePlan != null" >
        is_Made_Plan = #{isMadePlan,jdbcType=INTEGER},
      </if>
      <if test="isCorrected != null" >
        is_Corrected = #{isCorrected,jdbcType=INTEGER},
      </if>
      <if test="isSentfeedback != null" >
        is_SentFeedback = #{isSentfeedback,jdbcType=INTEGER},
      </if>
    </set>
    where course_Id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scnu.course.bean.Course" >
    update course
    set user_Id = #{userId,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      date = #{date,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIME},
      student = #{student,jdbcType=CHAR},
      subject = #{subject,jdbcType=CHAR},
      grade_Id = #{gradeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      course_Time = #{courseTime,jdbcType=INTEGER},
      resid_Course = #{residCourse,jdbcType=INTEGER},
      course_Topic = #{courseTopic,jdbcType=CHAR},
      is_Made_Plan = #{isMadePlan,jdbcType=INTEGER},
      is_Corrected = #{isCorrected,jdbcType=INTEGER},
      is_SentFeedback = #{isSentfeedback,jdbcType=INTEGER}
    where course_Id = #{courseId,jdbcType=INTEGER}
  </update>
  
  <select id="findAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select course.*,gradeinfo.grade_Name from course,gradeinfo where course.grade_id = gradeinfo.grade_id
        and user_Id = #{userId,jdbcType=INTEGER} order by #{courseId,jdbcType=INTEGER}
   </select>
   
   <select id="getDayCounts" parameterType="map" resultMap="BaseResultMap">
        select * from course where user_Id = #{userId,jdbcType=INTEGER} and year = #{year,jdbcType=INTEGER} and month = #{month,jdbcType=INTEGER}
   </select>
   <select id="getMonthCounts" parameterType="map" resultMap="BaseResultMap">
        select * from course where user_Id = #{userId,jdbcType=INTEGER} and year = #{year,jdbcType=INTEGER}
   </select>
   <select id="getAll" parameterType="map" resultMap="BaseResultMap">
   		select course.*,gradeinfo.grade_Name from course,gradeinfo where course.grade_id = gradeinfo.grade_id
   		and user_Id = #{userId,jdbcType=INTEGER} and year = #{year,jdbcType=INTEGER} and month = #{month,jdbcType=INTEGER}
   </select>
   <select id="findday" parameterType="map" resultMap="BaseResultMap">
   		select course.*,gradeinfo.grade_Name from course,gradeinfo where course.grade_id = gradeinfo.grade_id 
   		and user_Id = #{userId,jdbcType=INTEGER} and year = #{syear,jdbcType=INTEGER} 
   		and month = #{smonth,jdbcType=INTEGER} 
   		and date between #{sday,jdbcType=INTEGER} and #{eday,jdbcType=INTEGER}
   </select>
   <select id="findmonth" parameterType="map" resultMap="BaseResultMap">
   		select course.*,gradeinfo.grade_Name from course,gradeinfo where course.grade_id = gradeinfo.grade_id
   		and  user_Id = #{userId,jdbcType=INTEGER} and year = #{syear,jdbcType=INTEGER} 
   		and ((month = #{smonth,jdbcType=INTEGER} and date <![CDATA[ >= ]]> #{sday,jdbcType=INTEGER})
   		or (month = #{emonth,jdbcType=INTEGER} and date <![CDATA[ <= ]]> #{eday,jdbcType=INTEGER}))
   </select>
   <select id="findyear" parameterType="map" resultMap="BaseResultMap">
   		select course.*,gradeinfo.grade_Name from course,gradeinfo where course.grade_id = gradeinfo.grade_id 
   		and user_Id = #{userId,jdbcType=INTEGER} and (year = #{syear,jdbcType=INTEGER} 
   		and month = #{smonth,jdbcType=INTEGER} and date <![CDATA[ >= ]]> #{sday,jdbcType=INTEGER})
   		or (year = #{eyear,jdbcType=INTEGER} and month = #{emonth,jdbcType=INTEGER} and date <![CDATA[ <= ]]> #{eday,jdbcType=INTEGER})
   </select>
</mapper>